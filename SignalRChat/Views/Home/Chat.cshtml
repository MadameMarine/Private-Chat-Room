@{
    ViewBag.Title = "Chat";
}

<h1>Chat</h1>
<h2>Groupe Chat: @Model.Id</h2>

<div class="container">
    <div class="col-lg-6">
        @*provisoire*@
        <ul id="idUrl"></ul>
        @*provisoire*@
        <label for="TextUser">User..........</label>
        <input type="text" id="userName" />
        <input type="button" id="joinGroup" value="Join Private Group" />
        <br />
        <ul id="connection"></ul>
        <label for="TextMessage" id="textmessage">Message...</label>
        <input type="text" id="message" />
        <input type="button" id="sendmessage" value="Send" />
        <input type="hidden" id="displayname" />

    </div>
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--Hide message box and send button-->
    <script type="text/javascript">
        $(document).ready(function () {
            $('#textmessage').hide();
            $('#message').hide();
            $('#sendmessage').hide();
        });
    </script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            var userName = '';
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            var idUrl = '';

             $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.sendNote('@Model.Id', $('#userName').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
             });


            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (message) {
                console.log( message.Name + ' ' + message.Message);
                $('#discussion').append('<li><strong>' + htmlEncode(message.Name) + '</strong>: ' + htmlEncode(message.Message) + '</li>');
            };

            
            //Join Session
            $('#joinGroup').click(function () {
                $('#joinGroup').prop('disabled', true);
                $('#userName').prop('disabled', true);

                //connection to chathub
                console.log('joining session @Model.Id...');
                chat.server.joinSession('@Model.Id').done(function (session) {
                    console.log('user connected to session  @Model.Id');

                    //Read data in dictionary
                    var currentActivity = session.CurrentActivity;                    
                    console.log("joinsession return = " + currentActivity); 

                    //If currentActivity has changed : display notes
                    if (currentActivity != null) {
                        //idée setTimeout : attendre x minutes dans la boucle if
                        //idée2 while mais vide
                            $(document).ready(function () {
                                $('#textmessage').show();
                                $('#message').show();
                                $('#sendmessage').show();
                            });
                    }

                     // Set initial focus to message input box.
                    $('#message').focus();
                });

                //show in App1 when user is connected
                chat.server.sendNote('@Model.Id', $('#userName').val(), "connected");
                //Display message connection on web page
                $('#connection').append('You are connected to @Model.Id  group');
            });

            //go!
            console.log('Starting signalR connection...');
            $.connection.hub.start().done(function () {

            });
        });

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}